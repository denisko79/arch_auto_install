#!/bin/bash
# arch-auto-install-interactive.sh
# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Arch Linux: Btrfs + EFISTUB + bspwm + PipeWire
# –ë–µ–∑ –ø–∞—Ä–æ–ª–µ–π –≤ –∫–æ–¥–µ, —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º –ø–µ—Ä–µ–¥ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º

set -euo pipefail

# ============== –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ ==============
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

function print_info { echo -e "${GREEN}[INFO] $1${NC}"; }
function print_warn { echo -e "${YELLOW}[WARN] $1${NC}"; }
function print_error { echo -e "${RED}[ERROR] $1${NC}"; }

# ============== –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≤–≤–æ–¥ ==============
print_info "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ Arch Linux (Btrfs + EFISTUB + bspwm)"

read -p "üîπ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " USERNAME
while [[ -z "$USERNAME" ]]; do
    print_error "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º."
    read -p "üîπ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " USERNAME
done

read -sp "üîπ –ü–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $USERNAME: " USER_PASS
echo
while [[ -z "$USER_PASS" ]]; do
    print_error "–ü–∞—Ä–æ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º."
    read -sp "üîπ –ü–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $USERNAME: " USER_PASS
    echo
done

read -sp "üîπ –ü–∞—Ä–æ–ª—å –¥–ª—è root: " ROOT_PASS
echo
while [[ -z "$ROOT_PASS" ]]; do
    print_error "–ü–∞—Ä–æ–ª—å root –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º."
    read -sp "üîπ –ü–∞—Ä–æ–ª—å –¥–ª—è root: " ROOT_PASS
    echo
done

read -p "üîπ –ò–º—è —Ö–æ—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, archbox): " HOSTNAME
HOSTNAME=${HOSTNAME:-"archbox"}

echo "üîπ –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–∏—Å–∫–∏:"
lsblk -d -e7 -o NAME,SIZE,MODEL
read -p "–í–≤–µ–¥–∏—Ç–µ –¥–∏—Å–∫ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, sda): " DISK_DEVICE
DISK="/dev/$DISK_DEVICE"

if [[ ! -b "$DISK" ]]; then
    print_error "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ $DISK –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
    exit 1
fi

print_warn "–í–ù–ò–ú–ê–ù–ò–ï: –≤–µ—Å—å –¥–∏—Å–∫ $DISK –±—É–¥–µ—Ç –û–¢–§–û–†–ú–ê–¢–ò–†–û–í–ê–ù!"
read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " CONFIRM
if [[ ! "$CONFIRM" =~ ^[Yy]$ ]]; then
    print_info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞."
    exit 0
fi

read -p "–†–∞–∑–º–µ—Ä EFI-—Ä–∞–∑–¥–µ–ª–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 512M): " EFI_SIZE
EFI_SIZE=${EFI_SIZE:-"512M"}

SWAP_ENABLE=""
read -p "–°–æ–∑–¥–∞—Ç—å swap-—Ä–∞–∑–¥–µ–ª? (y/N): " SWAP_ENABLE_INPUT
if [[ "$SWAP_ENABLE_INPUT" =~ ^[Yy]$ ]]; then
    read -p "–†–∞–∑–º–µ—Ä swap (–Ω–∞–ø—Ä–∏–º–µ—Ä, 4G, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 4G): " SWAP_SIZE
    SWAP_SIZE=${SWAP_SIZE:-"4G"}
    SWAP_ENABLE="yes"
fi

read -p "–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, Europe/Moscow): " TIMEZONE
TIMEZONE=${TIMEZONE:-"Europe/Moscow"}

read -p "–õ–æ–∫–∞–ª—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, en_US.UTF-8): " LOCALE
LOCALE=${LOCALE:-"en_US.UTF-8"}

read -p "–†–∞—Å–∫–ª–∞–¥–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (us, ru –∏ —Ç.–ø.): " KEYMAP
KEYMAP=${KEYMAP:-"us"}

read -p "–®—Ä–∏—Ñ—Ç –∫–æ–Ω—Å–æ–ª–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é latarcyrheb-sun16): " FONT
FONT=${FONT:-"latarcyrheb-sun16"}

read -p "–ö–æ–º–ø—Ä–µ—Å—Å–∏—è Btrfs (zstd/lzo/zlib, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é zstd): " COMPRESS
COMPRESS=${COMPRESS:-"zstd"}

CPU_VENDOR="intel"
read -p "–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä (intel/amd, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é intel): " CPU_INPUT
CPU_VENDOR=${CPU_INPUT:-"intel"}
if [[ ! "$CPU_VENDOR" =~ ^(intel|amd)$ ]]; then
    print_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä: $CPU_VENDOR. –ò—Å–ø–æ–ª—å–∑—É–µ–º intel."
    CPU_VENDOR="intel"
fi

print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ UEFI..."
if [ ! -d /sys/firmware/efi/efivars ]; then
    print_error "–°–∏—Å—Ç–µ–º–∞ –Ω–µ –≤ —Ä–µ–∂–∏–º–µ UEFI!"
    exit 1
fi

print_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞..."
if ! ping -c 1 archlinux.org &> /dev/null; then
    print_error "–ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ."
    exit 1
fi

print_info "–í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–∏–Ω—è—Ç—ã. –ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É..."

# ============== 1. –†–∞–∑–º–µ—Ç–∫–∞ –¥–∏—Å–∫–∞ ==============
print_info "–†–∞–∑–º–µ—á–∞–µ–º $DISK..."
sgdisk --zap-all "$DISK" || { print_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –¥–∏—Å–∫–∞."; exit 1; }

END_SECTOR=2047

# EFI
sgdisk -n 1:$END_SECTOR:+$EFI_SIZE -t 1:EF00 -c 1:"EFI System" "$DISK"
END_SECTOR=$(sgdisk -F "$DISK")

# Swap (–µ—Å–ª–∏ –≤–∫–ª—é—á—ë–Ω)
SWAP_PART=""
if [[ "$SWAP_ENABLE" == "yes" ]]; then
    sgdisk -n 2:$END_SECTOR:+$SWAP_SIZE -t 2:8200 -c 2:"Linux swap" "$DISK"
    END_SECTOR=$(sgdisk -F "$DISK")
    SWAP_PART="${DISK}2"
    ROOT_PART="${DISK}3"
else
    ROOT_PART="${DISK}2"
fi

# Root
sgdisk -n ${SWAP_ENABLE:+3} -t ${SWAP_ENABLE:+3}:8300 -c ${SWAP_ENABLE:+3}:"Linux root" "$DISK"

sleep 2

# ============== 2. –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ==============
print_info "–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–∞–∑–¥–µ–ª—ã..."
mkfs.fat -F32 "${DISK}1" || { print_error "–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è EFI."; exit 1; }
mkfs.btrfs -f "$ROOT_PART" || { print_error "–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Btrfs."; exit 1; }

if [[ -n "$SWAP_PART" ]]; then
    mkswap "$SWAP_PART"
    # –ù–µ –≤–∫–ª—é—á–∞–µ–º –ø–æ–∫–∞ ‚Äî –±—É–¥–µ—Ç –≤ fstab
fi

# ============== 3. Btrfs subvolumes ==============
print_info "–°–æ–∑–¥–∞—ë–º Btrfs subvolumes..."
mount "$ROOT_PART" /mnt
for subvol in @ @home @var @tmp @snapshots; do
    btrfs subvolume create "/mnt/$subvol"
done
umount /mnt

MOUNT_OPTS="noatime,compress=$COMPRESS,space_cache=v2"

mount -o $MOUNT_OPTS,subvol=@ "$ROOT_PART" /mnt
mkdir -p /mnt/{home,var,tmp,.snapshots,boot}
mount -o $MOUNT_OPTS,subvol=@home "$ROOT_PART" /mnt/home
mount -o $MOUNT_OPTS,subvol=@var "$ROOT_PART" /mnt/var
mount -o $MOUNT_OPTS,subvol=@tmp "$ROOT_PART" /mnt/tmp
mount -o $MOUNT_OPTS,subvol=@snapshots "$ROOT_PART" /mnt/.snapshots
mount "${DISK}1" /mnt/boot

if [[ -n "$SWAP_PART" ]]; then
    swapon "$SWAP_PART"
fi

# ============== 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤ ==============
print_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã..."
pacstrap /mnt base base-devel linux linux-firmware btrfs-progs efibootmgr
if [[ "$CPU_VENDOR" == "intel" ]]; then
    pacstrap /mnt intel-ucode
elif [[ "$CPU_VENDOR" == "amd" ]]; then
    pacstrap /mnt amd-ucode
fi

# ============== 5. fstab ==============
print_info "–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º fstab..."
genfstab -U /mnt >> /mnt/mnt/fstab

# –ï—Å–ª–∏ –µ—Å—Ç—å swap ‚Äî –¥–æ–±–∞–≤–∏–º –≤ fstab
if [[ -n "$SWAP_PART" ]]; then
    UUID_SWAP=$(blkid -s UUID -o value "$SWAP_PART")
    echo "UUID=$UUID_SWAP none swap sw 0 0" >> /mnt/mnt/fstab
fi

# ============== 6. chroot + –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ ==============
print_info "–í—Ö–æ–¥–∏–º –≤ chroot –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–∏—Å—Ç–µ–º—É..."

arch-chroot /mnt /bin/bash <<EOF
set -euo pipefail

echo "üî∏ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–∫–∞–ª–∏ –∏ –≤—Ä–µ–º–µ–Ω–∏..."
ln -sf /usr/share/zoneinfo/$TIMEZONE /etc/localtime
hwclock --systohc

echo "$LOCALE UTF-8" > /etc/locale.gen
locale-gen
echo "LANG=$LOCALE" > /etc/locale.conf

echo "KEYMAP=$KEYMAP" > /etc/vconsole.conf
echo "FONT=$FONT" >> /etc/vconsole.conf

echo "$HOSTNAME" > /etc/hostname

cat > /etc/hosts <<HOSTS
127.0.0.1   localhost
::1         localhost
127.0.1.1   $HOSTNAME.localdomain $HOSTNAME
HOSTS

echo "üî∏ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
echo "root:$ROOT_PASS" | chpasswd
useradd -m -G wheel -s /bin/bash $USERNAME
echo "$USERNAME:$USER_PASS" | chpasswd
sed -i 's/# %wheel ALL=(ALL) ALL/%wheel ALL=(ALL) ALL/' /etc/sudoers

echo "üî∏ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ X11, bspwm, PipeWire..."
pacman -Sy --noconfirm xorg-server xorg-xinit xorg-xrandr xorg-xsetroot xorg-xbacklight
pacman -Sy --noconfirm bspwm sxhkd picom alacritty nitrogen dmenu firefox neovim git

# –ö–æ–Ω—Ñ–∏–≥–∏ bspwm
su - $USERNAME -c '
mkdir -p ~/.config/{bspwm,sxhkd}
cp /usr/share/doc/bspwm/examples/bspwmrc ~/.config/bspwm/bspwmrc
cp /usr/share/doc/bspwm/examples/sxhkdrc ~/.config/sxhkd/sxhkdrc
chmod +x ~/.config/bspwm/bspwmrc
chmod +x ~/.config/sxhkd/sxhkdrc
echo "sxhkd &" > ~/.xinitrc
echo "exec bspwm" >> ~/.xinitrc
'

echo "üî∏ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PipeWire..."
pacman -Sy --noconfirm pipewire pipewire-pulse pipewire-alsa pipewire-jack wireplumber
systemctl --user enable pipewire pipewire-pulse wireplumber

echo "üî∏ –°–µ—Ç—å: NetworkManager..."
pacman -Sy --noconfirm networkmanager
systemctl enable NetworkManager

echo "üî∏ EFISTUB: –∫–æ–ø–∏—Ä—É–µ–º —è–¥—Ä–æ –≤ EFI..."
mkdir -p /boot/EFI/arch
cp /boot/vmlinuz-linux /boot/EFI/arch/vmlinuz-linux.efi
cp /boot/initramfs-linux.img /boot/EFI/arch/initramfs-linux.img

echo "üî∏ –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ UEFI..."
PARTUUID=\$(blkid -s PARTUUID -o value $ROOT_PART)
KERNEL_PARAMS="root=PARTUUID=\$PARTUUID rootflags=subvol=@ rw add_efi_memmap"

efibootmgr --create --disk $DISK --part 1 \
    --label "Arch Linux" \
    --loader /EFI/arch/vmlinuz-linux.efi \
    --unicode "\$KERNEL_PARAMS" \
    --verbose || echo "‚ö†Ô∏è efibootmgr –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π (–≤–æ–∑–º–æ–∂–Ω–æ, —É–∂–µ –µ—Å—Ç—å)"

echo "üî∏ –í–∫–ª—é—á–∞–µ–º fstrim.timer (–¥–ª—è SSD)..."
systemctl enable fstrim.timer

echo "üî∏ –ì–æ—Ç–æ–≤–æ! –í—ã—Ö–æ–¥ –∏–∑ chroot."
EOF

# ============== 7. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ ==============
print_info "–ó–∞–≤–µ—Ä—à–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É..."
if [[ -n "$SWAP_PART" ]]; then
    swapoff "$SWAP_PART"
fi

umount -R /mnt
print_info "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."
print_info "–û—Ç–∫–ª—é—á–∏—Ç–µ USB –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ—Å—å."
read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (Enter –¥–ª—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏)..."
reboot